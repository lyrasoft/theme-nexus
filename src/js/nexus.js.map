{"version":3,"sources":["nexus.ts"],"names":[],"mappings":";;;;;;;;;;YAIA,aAAA,MAAM,UAAU;gBACd,MAAM,CAAC,OAAO,CAAC,GAAe,EAAE,OAAa;oBAC3C,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC3C,CAAC;gBAED,YAAmB,GAAe;oBAAtB;;;;+BAAO,GAAG;uBAAY;oBAChC,EAAE;gBACJ,CAAC;gBAED,UAAU;oBACR,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;wBACnB,OAAO;oBACT,CAAC;oBAED,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE;wBACpB,OAAO,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE;4BACnB,IAAI,KAAK,EAAE,CAAC;gCACV,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;4BAC5B,CAAC;iCAAM,CAAC;gCACN,KAAK,GAAG,SAAS,CAAC;4BACpB,CAAC;4BAED,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;wBAChC,CAAC;qBACF,CAAC,CAAC;oBAEH,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC;wBACtD,EAAE,gBAAgB,CAAwC,WAAW,CAAC,IAAI,EAAE,CAAC;oBAE/E,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;wBAC7B,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC7B,CAAC;gBACH,CAAC;gBAED,iBAAiB;oBACf,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC;oBAErE,OAAO,EAAE,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;wBACtC,IAAI,MAAM,CAAC,UAAU,IAAI,GAAG,EAAE,CAAC;4BAC7B,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;4BACpD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;wBACpD,CAAC;6BAAM,CAAC;4BACN,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;4BAClD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;wBACtD,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC;gBAED,eAAe;oBACb,MAAM,WAAW,GAAG,QAAQ,CAAC,gBAAgB,CAAiB,6BAA6B,CAAC,CAAC;oBAE7F,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE,CAAC;wBACrC,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC;wBAE9E,IAAI,CAAC,IAAI,EAAE,CAAC;4BACV,SAAS;wBACX,CAAC;wBAED,MAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;wBAEvE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;4BACxC,MAAM,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;4BAEjD,IAAI,IAAI,EAAE,CAAC;gCACT,YAAY,CAAC,IAAI,EAAE,CAAC;4BACtB,CAAC;iCAAM,CAAC;gCACN,YAAY,CAAC,IAAI,EAAE,CAAC;4BACtB,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;gBAED,cAAc;oBACZ,MAAM,iBAAiB,GAAG,QAAQ,CAAC,gBAAgB,CAAsC,6BAA6B,CAAC,CAAC;oBAExH,KAAK,MAAM,gBAAgB,IAAI,iBAAiB,EAAE,CAAC;wBACjD,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;4BAC9C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;gCAChC,IAAI,EAAE,GAAuB,QAAQ,CAAC,IAAI,CAAC;gCAE3C,IAAI,gBAAgB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;oCACtC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gCACjE,CAAC;gCAED,IAAI,EAAE,EAAE,CAAC;oCACP,EAAE,CAAC,iBAAiB,EAAE,EAAE;2CACrB,EAAE,CAAC,oBAAoB,EAAE,EAAE;2CAC3B,EAAE,CAAC,uBAAuB,EAAE,EAAE,CAAC;gCACpC,CAAC;4BACH,CAAC;iCAAM,CAAC;gCACN,QAAQ,CAAC,gBAAgB,EAAE,EAAE;uCAC1B,QAAQ,CAAC,mBAAmB,EAAE,EAAE;uCAChC,QAAQ,CAAC,sBAAsB,EAAE,EAAE,CAAC;4BACzC,CAAC;wBACH,CAAC,CAAC,CAAA;oBACJ,CAAC;gBACH,CAAC;aACF,CAAA;YAED,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEZ,KAAK,GAAG,CAAC,CAAC,MAAM,CAAa,QAAQ,CAAC,CAAC;YAE7C,KAAK,CAAC,UAAU,EAAE,CAAC;YACnB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC1B,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC","file":"nexus.js","sourcesContent":["\r\nimport '@main';\r\nimport type { UnicornApp } from '@windwalker-io/unicorn/types/unicorn';\r\n\r\nclass NexusTheme {\r\n  static install(app: UnicornApp, options?: any): void {\r\n    const nexus = app.$nexus = new this(app);\r\n  }\r\n\r\n  constructor(public app: UnicornApp) {\r\n    //\r\n  }\r\n\r\n  initRipple() {\r\n    if (!window.Ribble) {\r\n      return;\r\n    }\r\n\r\n    u.directive('ripple', {\r\n      mounted(el, { value }) {\r\n        if (value) {\r\n          value = JSON.parse(value);\r\n        } else {\r\n          value = undefined;\r\n        }\r\n\r\n        Ribble.attachEvent(el, value);\r\n      }\r\n    });\r\n\r\n    const buttons = document.querySelector('#admin-toolbar')\r\n      ?.querySelectorAll<HTMLAnchorElement | HTMLButtonElement>('a, button') || [];\r\n\r\n    for (const button of buttons) {\r\n      Ribble.attachEvent(button);\r\n    }\r\n  }\r\n\r\n  initSidebarToggle() {\r\n    const toggler = document.querySelector('[data-nx-toggle=\"sidebar\"]');\r\n\r\n    toggler?.addEventListener('click', () => {\r\n      if (window.innerWidth <= 991) {\r\n        document.body.classList.remove('sidebar-collapsed');\r\n        document.body.classList.toggle('sidebar-enabled');\r\n      } else {\r\n        document.body.classList.remove('sidebar-enabled');\r\n        document.body.classList.toggle('sidebar-collapsed');\r\n      }\r\n    });\r\n  }\r\n\r\n  initSidebarMenu() {\r\n    const menuButtons = document.querySelectorAll<HTMLDivElement>('.l-sidebar .dropdown-toggle');\r\n\r\n    for (const menuButton of menuButtons) {\r\n      const menu = menuButton.closest('.dropdown')?.querySelector('.dropdown-menu');\r\n\r\n      if (!menu) {\r\n        continue;\r\n      }\r\n\r\n      const menuCollapse = u.$ui.bootstrap.collapse(menu, { toggle: false });\r\n\r\n      menuButton.addEventListener('click', () => {\r\n        const show = menuButton.classList.toggle('show');\r\n\r\n        if (show) {\r\n          menuCollapse.show();\r\n        } else {\r\n          menuCollapse.hide();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  initFullscreen() {\r\n    const fullScreenButtons = document.querySelectorAll<HTMLAnchorElement|HTMLButtonElement>('[data-nx-toggle=fullscreen]');\r\n\r\n    for (const fullScreenButton of fullScreenButtons) {\r\n      fullScreenButton.addEventListener('click', () => {\r\n        if (!document.fullscreenElement) {\r\n          let el: HTMLElement | null = document.body;\r\n\r\n          if (fullScreenButton.dataset.bsTarget) {\r\n            el = document.querySelector(fullScreenButton.dataset.bsTarget);\r\n          }\r\n\r\n          if (el) {\r\n            el.requestFullscreen?.()\r\n            || el.mozRequestFullscreen?.()\r\n            || el.webkitRequestFullscreen?.();\r\n          }\r\n        } else {\r\n          document.cancelFullscreen?.()\r\n          || document.mozCancelFullScreen?.()\r\n          || document.webkitCancelFullScreen?.();\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nu.use(NexusTheme);\r\n\r\nconst nexus = u.inject<NexusTheme>('$nexus');\r\n\r\nnexus.initRipple();\r\nnexus.initSidebarToggle();\r\nnexus.initSidebarMenu();\r\nnexus.initFullscreen();\r\n\r\ndeclare global {\r\n  interface HTMLElement {\r\n    mozRequestFullscreen?: Function;\r\n    webkitRequestFullscreen?: Function;\r\n  }\r\n  interface Document {\r\n    cancelFullscreen?: Function;\r\n    mozCancelFullScreen?: Function;\r\n    webkitCancelFullScreen?: Function;\r\n  }\r\n}\r\n"]}